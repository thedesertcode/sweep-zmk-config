// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define MAIN_L 0   
#define LEFT_L 1
#define RGHT_L 2
#define BOTH_L 3
#define MACRO_L 4
#define MOUSE_L 5
#define CONN_L 6
#define RU_KEYS_L 7

// https://zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

/ {
    keys {
        compatible = "gpio-keys";
        soft_off_gpio_key: soft_off_gpio_key {
            gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        };
    };
    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };
    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };
    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            bindings = <&kp &kp>;
        };
        mmv {
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <40>;
            delay-ms = <0>;
        };
        msc {
            acceleration-exponent = <0>;
            time-to-max-speed-ms = <500>;
            delay-ms = <10>;
        };

       /* Left-half battery string, "%p" is replaced by the sensor value   */
       batt_l: batt_l {
           compatible = "zmk,behavior-send-string";
           label = "BATT_L";
           /* prefix, sensor-value, suffix */
           string = "L:%p%% ";
           sensor = <&battery_sensor>;          /* local sensor */
           #binding-cells = <0>;
       };

       /* Right-half battery string  */
       batt_r: batt_r {
           compatible = "zmk,behavior-send-string";
           label = "BATT_R";
           /* the central half already knows the peripheral SoC% */
           string = "R:%p%%";
           sensor = <&battery_peripheral_0>;    /* fetched through proxy */
           #binding-cells = <0>;
       };

       /* A tiny macro that fires them in sequence then sends Enter */
       batt_both: batt_both {
           compatible = "zmk,behavior-macro";
           label = "BATT_BOTH";
           bindings = <
               &batt_l           /* left string  */
               &batt_r           /* right string */
               &kp ENTER         /* newline      */
           >;
       };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both_layer {
            if-layers = <LEFT_L RGHT_L>;
            then-layer = <BOTH_L>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            display-name = "MAIN";
            bindings = <
            &kp Q    &kp W       &kp E        &kp R        &kp T    &kp Y    &kp U         &kp I          &kp O         &kp P
            &kp A    &ht LALT S  &ht LCTRL D  &ht LGUI F   &kp G    &kp H    &ht RGUI J    &ht RCTRL K    &ht RALT L    &kp BSPC
            &kp Z    &kp X       &kp C        &kp V        &kp B    &kp N    &kp M         &kp COMMA      &kp DOT       &kp ENTER
            &lt LEFT_L TAB    &kp LSHIFT    &kp SPACE    &lt RGHT_L TAB
            >;
        };

        left_layer {
            display-name = "LEFT (SYMBOLS)";
            bindings = <
            &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE
            &kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &trans       &kp FSLH   &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI
            &kp SQT   &kp RBKT  &kp RBRC  &kp RPAR  &trans       &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK
            &trans    &trans    &trans    &trans
            >;
        };


        right_layer {
            display-name = "RIGHT (NUM & NAVIGATION)";
            bindings = <
            &kp N1   &kp N2    &kp N3     &kp N4   &kp N5     &kp N6  &kp N7    &kp N8     &kp N9     &kp N0
            &kp DEL  &kp CAPS  &kp PSCRN  &kp INS  &trans     &kp LEFT  &kp DOWN   &kp UP  &kp RIGHT &trans
            &trans   &trans    &trans     &trans   &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END &trans
            &trans   &kp ESC   &trans     &trans
            >;
        };

        both_layer {     
            display-name = "BOTH (FUNCTIONS)";
            bindings = <
            &kp F1    &kp F2    &kp F3    &kp F4    &trans    &trans    &trans    &trans    &kp C_MUTE    &kp C_PREV
            &kp F5    &kp F6    &kp F7    &kp F8    &trans    &trans    &kp C_BRI_UP    &trans    &kp C_VOL_UP    &kp C_PP
            &kp F9    &kp F10   &kp F11   &kp F12   &trans    &trans    &kp C_BRI_DEC   &trans    &kp C_VOL_DN    &kp C_NEXT
            &trans    &trans    &trans    &trans
            >;
        };

        macro_layer {
            display-name = "MACROS";
            bindings = <
            &trans      &trans    &trans     &trans     &trans      &trans      &trans      &trans      &trans      &trans
            &trans      &trans    &trans     &trans     &trans      &trans      &trans      &trans      &trans      &trans
            &trans      &trans    &trans     &trans     &trans      &trans      &trans      &trans      &trans      &trans
            &trans      &trans    &trans     &trans 
            >;
        };

        mouse_layer {
            display-name = "MOUSE";
            bindings = <
            &tog MOUSE  &mkp MB4  &mkp MCLK  &mkp MB5   &trans      &msc SCRL_LEFT     &msc SCRL_DOWN    &msc SCRL_UP     &msc SCRL_RIGHT    &tog MOUSE
            &trans      &trans    &trans     &trans     &trans      &mmv MOVE_LEFT     &mmv MOVE_DOWN    &mmv MOVE_UP     &mmv MOVE_RIGHT    &trans
            &trans      &trans    &trans     &trans     &trans      &trans     &mkp MB4  &mkp MCLK  &mkp MB5  &trans
            &kp SPACE  &kp LSHIFT  &mkp LCLK  &mkp RCLK
            >;
        };

        connection_layer {
            display-name = "CONNECTION";
            bindings = <
            &trans      &trans    &trans     &bt BT_SEL 0     &bt BT_SEL 3      &bt BT_CLR      &trans      &trans      &trans      &studio_unlock
            &trans      &trans    &trans     &bt BT_SEL 1     &bt BT_SEL 4      &trans          &trans      &trans      &trans      &trans
            &trans      &trans    &trans     &bt BT_SEL 2     &trans            &trans          &trans      &trans      &trans      &trans
            &trans      &trans    &out OUT_TOG     &trans 
            >;
        };

        ru_keys_layer {
            display-name = "RU KEYS";
            bindings = <
            &trans      &trans    &trans     &trans     &trans      &trans      &trans      &trans      &trans      &trans
            &trans      &trans    &trans     &trans     &trans      &trans      &trans      &trans      &trans      &trans
            &trans      &trans    &trans     &trans     &trans      &trans      &trans      &trans      &trans      &trans
            &trans      &trans    &trans     &trans
            >;
        };

    };
};
